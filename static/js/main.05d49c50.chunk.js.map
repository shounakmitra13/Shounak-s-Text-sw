{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","href","title","type","id","Link","to","aboutText","placeholder","onClick","toggleMode","role","htmlFor","Alert","style","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_Fragment","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","navigator","clipboard","writeText","split","join","filter","element","About","myStyle","border","borderColor","defaultProps","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","BrowserRouter","document","body","changegreen","changered","changeyellow","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.05d49c50.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-warning\" type=\"submit\">\r\n              Search\r\n            </button>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutTest: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"Fill here\",\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:\"50px\"}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\">\r\n       <strong> {capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n</div>}\r\n</div>\r\n  )\r\n}","import { useState } from \"react\";\r\nimport React from \"react\";\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(' ');\r\n    const handleUpClick=()=>{\r\n       // console.log(\"Uppercase was clicked\"+ text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n//props.showAlert(\"The text was converted to uppercase\",\"success\");\r\n    }\r\n    const handleLowClick=()=>{\r\n      //  console.log(\"Lowercase was clicked\"+ text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        //props.showAlert(\"The text was converted to lowercase\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n      //  console.log(\"OnChange\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleClearClick=()=>{\r\n      let newText='';\r\n      setText(newText);\r\n     // props.showAlert(\"The text was cleared\",\"success\");\r\n  }\r\n  const handleCopy=()=>{\r\n    navigator.clipboard.writeText(text);\r\n   //props.showAlert(\"The text was copied\",\"success\");\r\n}\r\nconst handleExtraSpaces=()=>{\r\n  let newText=text.split(/[ ]+/);\r\n  setText(newText.join(\" \"));\r\n //props.showAlert(\"The extra spaces were removed\",\"success\");\r\n}\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'#160552'}}>\r\n        <h1 className=\"mb-2\">{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'#160552'}}id=\"mybox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button disabled={text.length===0} className=\"btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button disabled={text.length===0} className=\"btn-primary2 mx-1 my-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n      <button  disabled={text.length===0}className=\"btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text.</button>\r\n      <button disabled={text.length===0} className=\"btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n      <button disabled={text.length===0} className=\"btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n      </div>\r\n    <div className=\"container-my4\"  style={{color:props.mode==='dark'?'white':'#160552'}}>\r\n        <h1 className='mb-2'>Your text Summary</h1>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}words and{text.length}characters</p>\r\n        <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length}Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter your text in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nexport default function About(props) {\r\n\r\n    let myStyle={\r\n      color:props.mode==='dark'?'white':'#042743',\r\n      backgroundColor:props.mode==='dark'?'#042743':'white',\r\n      border:'2-px solid',\r\n      borderColor:props.mode==='dark'?'white':'#042743'\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1 className=\"my-2\">About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                style={myStyle}\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n              <strong> Analyze Your Text</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n              Helps analyze your text easily\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                <strong>Free To Use</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                A free to use tool that helps to analyze your text.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                <strong>Browser Compatible</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                Works on any Browser\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App2.css\";\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport About from \"./components/About\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#160552\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      //document.title = \"Textutils~Dark Mode\";\n    } else if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success \");\n      //document.title = \"TextUtils~LightMode\";\n    }\n  };\n  const changegreen = () => {\n    document.body.style.backgroundColor = \"#35C649\";\n  };\n  const changeyellow = () => {\n    document.body.style.backgroundColor = \"#CAB911\";\n  };\n  const changered = () => {\n    document.body.style.backgroundColor = \"#C15031\";\n  };\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar\n          title=\"Textutils\"\n          aboutText=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n          changegreen={changegreen}\n          changered={changered}\n          changeyellow={changeyellow}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-4\" mode={mode}>\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode} />}></Route>\n            <Route\n              exact path=\"/\"\n              element={\n                <TextForm heading=\"Try Textutils: a word counter,character counter ,remove extra spaces. \" mode={mode} />\n              }\n            ></Route>\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}