{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","components/About.js","App.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","href","title","type","id","Link","to","aboutText","placeholder","onClick","toggleMode","role","htmlFor","Alert","style","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","text","setText","useState","_Fragment","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","handleUpClick","handleLowClick","handleClearClick","handleCopy","navigator","clipboard","writeText","handleExtraSpaces","split","join","handlePascalCase","newText","map","filter","element","About","myStyle","border","borderColor","defaultProps","App","setMode","setAlert","showAlert","message","setTimeout","Router","document","body","Routes","Route","path","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.c38e5a71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-warning\" type=\"submit\">\r\n              Search\r\n            </button>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutTest: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"Fill here\",\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:\"50px\"}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\">\r\n       <strong> {capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n</div>}\r\n</div>\r\n  )\r\n}","// src/components/TextForm.js\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpClick = () => setText(text.toUpperCase());\r\n  const handleLowClick = () => setText(text.toLowerCase());\r\n  const handleClearClick = () => setText(\"\");\r\n  const handleCopy = () => navigator.clipboard.writeText(text);\r\n  const handleExtraSpaces = () => setText(text.split(/\\s+/).join(\" \"));\r\n\r\n  const handlePascalCase = () => {\r\n    const newText = text\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\"\");\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => setText(event.target.value);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#160552\" }}\r\n      >\r\n        <h1 className=\"mb-2\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#13466e\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#160552\",\r\n            }}\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-success mx-1 my-1\"\r\n          onClick={handlePascalCase}\r\n        >\r\n          Convert to Pascal Case\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-4\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#160552\" }}\r\n      >\r\n        <h1 className=\"mb-2\">Your Text Summary</h1>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((element) => element.length !== 0)\r\n              .length\r\n          }{\" \"}\r\n          words and {text.length} characters\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(/\\s+/).filter((element) => element.length !== 0)\r\n              .length}{\" \"}\r\n          Minutes read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter your text in the textbox above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport default function About(props) {\r\n\r\n    let myStyle={\r\n      color:props.mode==='dark'?'white':'#042743',\r\n      backgroundColor:props.mode==='dark'?'#042743':'white',\r\n      border:'2-px solid',\r\n      borderColor:props.mode==='dark'?'white':'#042743'\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1 className=\"my-2\">About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                style={myStyle}\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n              <strong> Analyze Your Text</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n              Helps analyze your text easily\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                <strong>Free To Use</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                A free to use tool that helps to analyze your text.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                <strong>Browser Compatible</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                Works on any Browser\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// src/App.js\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => setAlert(null), 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar title=\"TextSwift\" mode={mode} toggleMode={toggleMode} aboutText=\"About\" />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Routes>\n          <Route path=\"/about\" element={<About mode={mode} />} />\n          <Route\n            path=\"/\"\n            element={\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Try TextSwift - Word Counter, Character Counter, Text Manipulator\"\n                mode={mode}\n              />\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}